* used to compare arrays 
* to compare size must be the same 
* returns as boolean value ( True or False )

...................................................

eg :  

from numpy import *
a=array([1,2,3])
b=array([3,2,1])
print(a==b)

output : [False  True False]

........................................................

any () function 

return True if any element in iterable is True 

from numpy import *
a=array([1,2,3])
b=array([3,2,1])
print(any(a==b))

output : True 

............................................................

all () function 

return True if all element in iterable is True otherwise gives False 

from numpy import *
a=array([1,2,3])
b=array([1,2,3])
print(all(a==b))

output : True 

....................................................................

where () function 

Function is used to create a new array depends on condition 

from numpy import *
a=array([1,3,300])
b=array([1,500,3])
c=(where(a>b,a,b))
print(c)

[  1 500 300]

here : 

in line 51 where condition check
if a>b ( a is greater than b = True ) a executed 
if false b executed

............................................................................................................................

nonzero () function 

from numpy import *
a=array([10,0,300])
print(nonzero(a))

output : (array([0, 2]),)

Index 1 is not showing because there is zero 

.......................................................

Aliasing_Array 

means giving nickname 

from numpy import *
a=array([10,0,300])
b=a
print(id(a))
print(id(b))

output :
140018761269584
140018761269584

-- same memory location , affect eachother.changing the value of a , directly affect value of b

............................................................................................................................

view () method 

constract a new view array 

from numpy import *
a=array([10,0,300])
b=a.view()
print(id(a))
print(id(b))

output : 

139908027826512
139908027826608

they are independent 

..........................................................................

Copy () 

from numpy import *
a=array([10,0,300])
b=copy(a)
print(id(a))
print(id(b))

output : 

140058127307088
140058127307184

both are independent
