
Start = starting point 
stop = stoping point 
num = 50 ( divide in fifty parts )
endpoint = if true : take last element 
           if false : do not take last element
base = 10.0 ( power )
arange != arrange ( bit like range () )
dtype = datatype 
        i = int 
        f = float




Numpy 
..............
* pip install numpy
* scientific calculation
* used to create n dimensional array ( n= number )
..............................................................
Ways to creating array in numpy

1.array() function

from numpy import *
student=array([1,2,3,4])
print(student)

............

ACCESSING NUMBER ARRAY USING FOR LOOP 

from numpy import *
student=array([1,2,3,4])
x=len(student)
print(x)
for i in range(x):
    print(i,"=",student[i])

ACCESSING NUMPY ARRAY USING WHILE LOOP 

from numpy import *
student=array([1,2,3,4])
x=len(student)
i=0
while i<x:
    print(i,"=",student[i])
    i+=1

..................

>(student[0])    == accessing value
>student[0]=25 == modifying value
>(student.dtype) == to find its datatype

............................................................................................................................................


2.Linspace() function

Syntax : array_name = linspace (start,stop,num=50,endpoint=true)

* start = starting point
* stop = stopping point
* num = divide elements into 50(default) parts and indexing value)
* endpoint = True ( include last element ) false = do not include last element

example :

from numpy import *
a=linspace(1,8,5(num=in a 5 parts),endpoint=True)
print(a)

output : 

[1.| 2.75 | 4.5 | 6.25 | 8. |]

Five segments


********************************

accessing using for loop 

from numpy import *
a=linspace(1,8,5,endpoint=True)
x=len(a)
for i in range(x):
    print(i,"=",a[i])
    
output :

0 = 1.0
1 = 2.75
2 = 4.5
3 = 6.25
4 = 8.0

accessing using while loop 

from numpy import *
a=linspace(1,8,5,endpoint=True)
x=len(a)
j=0
while j<x:
    print(j,'=',a[j])
    j+=1
    
 ........................................................................................................................................
 
 3.logspace() function 
 
syntax : array_name=logspace(start,stop,num=50,endpoint=True,base=10.0,dtype=None)
start = base(10.0)power*start
        10^start = 10^1
stop = base(10.0)power*stop 
       10^stop = 10^3
       
num= bydefault(50) - divide in a fifty parts 
Ex : 
from numpy import *
a=logspace(1,3,5)
print(a)

output: 
[  10.           31.6227766   100.          316.22776602 1000.        ]

..........................................................................................................................

4.Arange() function 

it's arange not arrange 

start-stop-stepsize 

{{ bit like a range function }}

ex: 

from numpy import *
a=arange(5)
print(a)

output : [0 1 2 3 4]


....................................................................................................................

5.Zeros() 

used to create a arrayh all zeros 

syantax : 

from numpy import *
a=zeros(5)
print(a)

output : 

[0. 0. 0. 0. 0.]




